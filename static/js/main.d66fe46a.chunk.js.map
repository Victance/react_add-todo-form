{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","classNames","TodoList","todos","map","getUser","usersFromServer","find","App","useState","setTodos","setTitle","setUserId","hasTitleError","setTitleError","hasUserIdError","setUserIdError","useEffect","todosFromServer","action","method","onSubmit","event","preventDefault","newTitle","newUserId","newTodo","Math","max","currentTodos","addTodo","type","placeholder","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d66fe46a.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={classNames(\n      'TodoInfo',\n      {\n        'TodoInfo--completed': todo.completed,\n      },\n    )}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    {todo.user && (\n      <UserInfo user={todo.user} />\n    )}\n  </article>\n);\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport { useEffect, useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Todo } from './types/Todo';\n\nconst getUser = (userId: number) => {\n  const foundUser = usersFromServer.find(user => (\n    user.id === userId\n  ));\n\n  return foundUser || null;\n};\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [hasTitleError, setTitleError] = useState(false);\n  const [hasUserIdError, setUserIdError] = useState(false);\n\n  useEffect(() => {\n    setTodos(\n      todosFromServer.map(todo => ({\n        ...todo,\n        user: getUser(todo.userId),\n      })),\n    );\n  }, []);\n\n  const addTodo = (newTitle: string, newUserId: number) => {\n    const maxId = Math.max(...todos.map(todo => todo.id));\n\n    const newTodo: Todo = {\n      id: maxId + 1,\n      title: newTitle,\n      userId: newUserId,\n      completed: false,\n      user: getUser(newUserId),\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setTitleError(!title);\n    setUserIdError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    addTodo(title, userId);\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={event => {\n              setTitle(event.target.value);\n              setTitleError(false);\n            }}\n          />\n\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={event => {\n              setUserId(+event.target.value);\n              setUserIdError(false);\n            }}\n          >\n            <option value=\"0\">Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}